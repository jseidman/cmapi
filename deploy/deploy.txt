Prep:

* OS:
** Disable SELINUX
** Install and enable NTPD
** Disable iptables
** Install mysql driver for Hive
* Install Cloudera repo(s):
** cloudera-manager.repo
* Install and configure MySQL metastore DB
* Install and start CM processes:
** Master:
*** Install Oracle JDK, cm-server, cm-server-db, cm-agent, cm-daemons
*** Start server-db
*** Start server
*** Update /etc/cloudera-scm-agent/config.ini with hostname of CM server host
*** Start agent
** Workers:
*** install Oracle JDK, cm-agent, cm-daemons
*** Update /etc/cloudera-scm-agent/config.ini with hostname of CM server host
*** Start agents

Deploy (Python):
Config input:
* CM host
* cluster hosts
* metastore host
* metastore password
* firehosedb, navigatordb, headlampdb password
* admin user/password
* cluster name 
* data dir prefix (optional)
* parcel version 
Processing:
main():
* Get API Root (API=api_client.ApiResource())
* Update manager:
** Get CM (MANAGER=API.get_cloudera_manager())
** Set config (MANAGER.update_config(config params))
* Initialize cluster (init_cluster)
** Call create cluster command on root API with cluster name and cdh version (CDH5) (cluster=API.create_cluster())
** Add list of hosts to cluster (cluster.add_hosts(cluster hosts + CM host))
* Deploy management services (deploy_management)
** use CM instance to setup CM service (mgmt=MANAGER.create_mgmt_service())
** create roles for each CM process (mgmt.create_role(ROLE_NAME, ROLE_TYPE, HOST_ID)
** Configure each management role (for group in mgmt.get_all_role_config_groups() group.update_config(role_config)
** Start management services (mgmt.start.wait()
* Deploy parcels (deploy_parcels)
** get CDH parcels; distribute parcels; activate parcels
* deploy ZK (deploy_zookeeper)
** use cluster object to create ZK service (cluster.create_service())
** init ZK (init_zookeeper)
* deploy HDFS service (deploy_hdfs)
** get role config groups for NN, SNN, and DNs
** create config objects
** update role configs with config objects
* initialize HDFS (init_hdfs)
** format HDFS (format_hdfs)
* deploy YARN service (deploy_yarn)
* deploy Spark (deploy_spark)
* deploy HBase (deploy_hbase
* deploy Hive (deploy_hive)
* init Hive (init_hive)
** hive_service.create_hive_metastore_database()
** hive_service.create_hive_metastore_tables()
** hive_service.create_hive_warehouse()
* deploy Impala
* stop cluster
* start cluster
* deploy Search
* deploy Oozie
* deploy Sqoop
* deploy Hue
* stop cluster
* start cluster
* post_startup
** hdfs_service.create_hdfs_tmp()
** hiveCreateHiveWarehouse (?!)
** stop Ooozie
** create Oozie DB
** deploy client configs
** change /user permissions to 755

whirr-cm/CmServerImpl

471 configure()
443 -> provision()
663    -> provisionManagement()
735    -> provisionCluster()
761    -> provisionParcels()
820 -> configureServices()

Initialization steps before starting:

* format HDFS (apiResourceRoot.getClustersResource().getServicesResource(getName(cluster)).getRoleCommandsResource(cluster.getServiceName(CmServerServiceType.HDFS)).formatCommand())
* format Hive (hiveCreateHiveWarehouse)
* Oozie: 
** installOozieShareLib
** createOozieDb
* ZK:
** zooKeeperInitCommand
* Hue:
** syncHueDbCommand

Initialization after starting:
* HDFS
** hdfsCreateTmpDir
* Deploy client configs
